From f2ae67dd7ba177ddae830de42dde26f147db5df6 Mon Sep 17 00:00:00 2001
From: huaxiang sun <hsun@cloudera.com>
Date: Tue, 25 Jul 2017 17:08:04 -0700
Subject: [PATCH 372/410] HBASE-18247 Hbck to fix the case that replica region
 shows as key in the meta table

(cherry picked from commit 30d58a14212fdfeefe70152d76189ca349fe3dd9)

Change-Id: I2169290ec5a97a63747bc93ee37f36729c3ac916
Author: huaxiang sun
Reason: Bug
Ref: CDH-57675
---
 .../org/apache/hadoop/hbase/MetaTableAccessor.java |   10 +++++--
 .../apache/hadoop/hbase/util/TestHBaseFsck.java    |   30 ++++++++++++++++++++
 2 files changed, 37 insertions(+), 3 deletions(-)

diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java
index d3e3157..d123a52 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java
@@ -732,7 +732,7 @@ public class MetaTableAccessor {
     List<HRegionLocation> locations = new ArrayList<HRegionLocation>(1);
     NavigableMap<byte[],NavigableMap<byte[],byte[]>> familyMap = r.getNoVersionMap();
 
-    locations.add(getRegionLocation(r, regionInfo, 0));
+    locations.add(getRegionLocation(r, regionInfo, regionInfo.getReplicaId()));
 
     NavigableMap<byte[], byte[]> infoMap = familyMap.get(getFamily());
     if (infoMap == null) return new RegionLocations(locations);
@@ -1415,10 +1415,14 @@ public class MetaTableAccessor {
 
     // region replicas are kept in the primary region's row
     Put put = new Put(getMetaKeyForRegion(regionInfo), time);
-    addRegionInfo(put, regionInfo);
+    HRegionInfo defaultRegionInfo = regionInfo;
+    if (regionInfo.getReplicaId() != HRegionInfo.DEFAULT_REPLICA_ID) {
+      defaultRegionInfo = new HRegionInfo(regionInfo, HRegionInfo.DEFAULT_REPLICA_ID);
+    }
+    addRegionInfo(put, defaultRegionInfo);
     addLocation(put, sn, openSeqNum, time, regionInfo.getReplicaId());
     putToMetaTable(connection, put);
-    LOG.info("Updated row " + regionInfo.getRegionNameAsString() +
+    LOG.info("Updated row " + defaultRegionInfo.getRegionNameAsString() +
       " with server=" + sn);
   }
 
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
index 36f2faf..aec288e 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
@@ -935,6 +935,36 @@ public class TestHBaseFsck {
     }
   }
 
+  /*
+   * This creates a table with region_replica > 1 and verifies hbck can fix replica region showing
+   * up as key in meta table.
+   */
+  @Test
+  public void testHbckReplicaRegionAsKeyInMeta() throws Exception {
+    TableName table = TableName.valueOf("testHbckReplicaRegionAsKeyInMeta");
+    try {
+      setupTableWithRegionReplica(table, 2);
+      TEST_UTIL.getHBaseAdmin().flush(table.getName());
+
+      HTable meta = new HTable(conf, TableName.META_TABLE_NAME);
+      HRegionInfo hri = new HRegionInfo(table, SPLITS[0], SPLITS[2], false, 1500328224175L, 1);
+      Put put = MetaTableAccessor.makePutFromRegionInfo(hri);
+      meta.put(put);
+
+      assertErrors(doFsck(conf, false),
+          new HBaseFsck.ErrorReporter.ERROR_CODE[] {
+              HBaseFsck.ErrorReporter.ERROR_CODE.EMPTY_META_CELL });
+
+      // fix the problem
+      doFsck(conf, true);
+
+      // run hbck again to make sure we don't see any errors
+      assertNoErrors(doFsck(conf, false));
+    } finally {
+      cleanupTable(table);
+    }
+  }
+
   @Test
   public void testHbckWithFewerReplica() throws Exception {
     TableName table =
-- 
1.7.9.5

