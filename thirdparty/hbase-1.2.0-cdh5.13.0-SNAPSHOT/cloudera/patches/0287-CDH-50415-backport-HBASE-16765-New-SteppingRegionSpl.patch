From 1ac1e7f59425378d28e88fa3c55330642aa5b402 Mon Sep 17 00:00:00 2001
From: Michael Stack <stack@apache.org>
Date: Mon, 27 Feb 2017 20:54:51 +0000
Subject: [PATCH 287/362] CDH-50415 backport HBASE-16765 New
 SteppingRegionSplitPolicy, avoid too aggressive
 spread of regions for small tables. Includes
 HBASE-16765 and the amendment HBASE-16765 Amend:
 Make SteppingSplitPolicy the default.

Change-Id: Ie8353f2f3c28afac4527236aeb38f2a846c7dcdf
Reason: Improvement
Author: Lars Hofhansl
Ref: CDH-50415
---
 hbase-common/src/main/resources/hbase-default.xml  |    2 +-
 .../IncreasingToUpperBoundRegionSplitPolicy.java   |    4 +--
 .../hbase/regionserver/SteppingSplitPolicy.java    |   32 ++++++++++++++++++++
 3 files changed, 35 insertions(+), 3 deletions(-)
 create mode 100644 hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SteppingSplitPolicy.java

diff --git a/hbase-common/src/main/resources/hbase-default.xml b/hbase-common/src/main/resources/hbase-default.xml
index 66bd4b6..cb23dfa 100644
--- a/hbase-common/src/main/resources/hbase-default.xml
+++ b/hbase-common/src/main/resources/hbase-default.xml
@@ -330,7 +330,7 @@ possible configurations would overwhelm and obscure the important.
   </property>
   <property>
     <name>hbase.regionserver.region.split.policy</name>
-    <value>org.apache.hadoop.hbase.regionserver.IncreasingToUpperBoundRegionSplitPolicy</value>
+    <value>org.apache.hadoop.hbase.regionserver.SteppingSplitPolicy</value>
     <description>
       A split policy determines when a region should be split. The various other split policies that
       are available currently are ConstantSizeRegionSplitPolicy, DisabledRegionSplitPolicy,
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/IncreasingToUpperBoundRegionSplitPolicy.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/IncreasingToUpperBoundRegionSplitPolicy.java
index 7144cb8..ff68110 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/IncreasingToUpperBoundRegionSplitPolicy.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/IncreasingToUpperBoundRegionSplitPolicy.java
@@ -45,7 +45,7 @@ import org.apache.hadoop.hbase.classification.InterfaceAudience;
 public class IncreasingToUpperBoundRegionSplitPolicy extends ConstantSizeRegionSplitPolicy {
 
   private static final Log LOG = LogFactory.getLog(IncreasingToUpperBoundRegionSplitPolicy.class);
-  private long initialSize;
+  protected long initialSize;
 
   @Override
   protected void configureForRegion(HRegion region) {
@@ -116,7 +116,7 @@ public class IncreasingToUpperBoundRegionSplitPolicy extends ConstantSizeRegionS
   }
 
   /**
-   * @return Region max size or {@code count of regions cubed * flushsize},
+   * @return Region max size or {@code count of regions cubed * 2 * flushsize},
    * which ever is smaller; guard against there being zero regions on this server.
    */
   protected long getSizeToCheck(final int tableRegionsCount) {
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SteppingSplitPolicy.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SteppingSplitPolicy.java
new file mode 100644
index 0000000..4f3e0f2
--- /dev/null
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SteppingSplitPolicy.java
@@ -0,0 +1,32 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.hbase.regionserver;
+
+public class SteppingSplitPolicy extends IncreasingToUpperBoundRegionSplitPolicy {
+  /**
+   * @return flushSize * 2 if there's exactly one region of the table in question
+   * found on this regionserver. Otherwise max file size.
+   * This allows a table to spread quickly across servers, while avoiding creating
+   * too many regions.
+   */
+  protected long getSizeToCheck(final int tableRegionsCount) {
+    return tableRegionsCount == 1  ? this.initialSize : getDesiredMaxFileSize();
+  }
+
+
+}
-- 
1.7.9.5

