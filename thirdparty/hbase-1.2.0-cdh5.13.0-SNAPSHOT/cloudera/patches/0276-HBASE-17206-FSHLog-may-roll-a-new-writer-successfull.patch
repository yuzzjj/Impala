From a41f84fefad384d638a5f2c067a21d7aa8771075 Mon Sep 17 00:00:00 2001
From: zhangduo <zhangduo@apache.org>
Date: Wed, 30 Nov 2016 21:41:29 +0800
Subject: [PATCH 276/362] HBASE-17206 FSHLog may roll a new writer
 successfully with unflushed entries

(cherry picked from commit bd490eeb71fc6b7f2b5fc914281c407199453ab4)
Author:    zhangduo <zhangduo@apache.org>
Date:      Wed Nov 30 21:41:29 2016 +0800
Reason:    Bug
Ref:       CDH-50412

Change-Id: I6390a79b6d66f381e23c6c0aad13c02cefab3ad6
---
 .../hadoop/hbase/regionserver/wal/FSHLog.java      |   18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java
index b2b96c0..e9b00e3 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java
@@ -1613,6 +1613,12 @@ public class FSHLog implements WAL {
      */
     private volatile CountDownLatch safePointReleasedLatch = new CountDownLatch(1);
 
+    private void checkIfSyncFailed(SyncFuture syncFuture) throws FailedSyncBeforeLogCloseException {
+      if (syncFuture.isThrowable()) {
+        throw new FailedSyncBeforeLogCloseException(syncFuture.getThrowable());
+      }
+    }
+
     /**
      * For Thread A to call when it is ready to wait on the 'safe point' to be attained.
      * Thread A will be held in here until Thread B calls {@link #safePointAttained()}
@@ -1623,14 +1629,12 @@ public class FSHLog implements WAL {
      * @return The passed <code>syncFuture</code>
      * @throws FailedSyncBeforeLogCloseException
      */
-    SyncFuture waitSafePoint(final SyncFuture syncFuture)
-    throws InterruptedException, FailedSyncBeforeLogCloseException {
-      while (true) {
-        if (this.safePointAttainedLatch.await(1, TimeUnit.NANOSECONDS)) break;
-        if (syncFuture.isThrowable()) {
-          throw new FailedSyncBeforeLogCloseException(syncFuture.getThrowable());
-        }
+    SyncFuture waitSafePoint(SyncFuture syncFuture) throws InterruptedException,
+        FailedSyncBeforeLogCloseException {
+      while (!this.safePointAttainedLatch.await(1, TimeUnit.MILLISECONDS)) {
+        checkIfSyncFailed(syncFuture);
       }
+      checkIfSyncFailed(syncFuture);
       return syncFuture;
     }
 
-- 
1.7.9.5

