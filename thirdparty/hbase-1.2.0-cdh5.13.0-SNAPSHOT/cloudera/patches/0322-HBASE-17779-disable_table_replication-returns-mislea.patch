From 8216669f8ffa6d3680f5db0ab79ddc3ad7d63cec Mon Sep 17 00:00:00 2001
From: tedyu <yuzhihong@gmail.com>
Date: Tue, 14 Mar 2017 12:34:04 -0700
Subject: [PATCH 322/362] HBASE-17779 disable_table_replication returns
 misleading message and does not turn off
 replication (Janos Gub)

(cherry picked from commit 318298047be788143405cfb101e1b0401f9e6b7a)

Change-Id: I31dbb6c42a8406a449d8c1fe4200c6ec982224a3
Reason: Bug
Author: Janos Gub
Ref: CDH-52694
---
 .../hbase/client/replication/ReplicationAdmin.java |   35 +++++++++++++++-----
 .../TestReplicationAdminWithClusters.java          |   17 ++++++++++
 2 files changed, 44 insertions(+), 8 deletions(-)

diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java
index 4e4af4f..d473d25 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java
@@ -641,15 +641,17 @@ public class ReplicationAdmin implements Closeable {
   /**
    * Set the table's replication switch if the table's replication switch is already not set.
    * @param tableName name of the table
-   * @param isRepEnabled is replication switch enable or disable
+   * @param enableRep is replication switch enable or disable
    * @throws IOException if a remote or network exception occurs
    */
-  private void setTableRep(final TableName tableName, boolean isRepEnabled) throws IOException {
+  private void setTableRep(final TableName tableName, boolean enableRep) throws IOException {
     Admin admin = null;
     try {
       admin = this.connection.getAdmin();
       HTableDescriptor htd = admin.getTableDescriptor(tableName);
-      if (isTableRepEnabled(htd) ^ isRepEnabled) {
+      ReplicationState currentReplicationState = getTableReplicationState(htd);
+      if (enableRep && currentReplicationState != ReplicationState.ENABLED
+          || !enableRep && currentReplicationState != ReplicationState.DISABLED) {
         boolean isOnlineSchemaUpdateEnabled =
             this.connection.getConfiguration()
                 .getBoolean("hbase.online.schema.update.enable", true);
@@ -657,7 +659,7 @@ public class ReplicationAdmin implements Closeable {
           admin.disableTable(tableName);
         }
         for (HColumnDescriptor hcd : htd.getFamilies()) {
-          hcd.setScope(isRepEnabled ? HConstants.REPLICATION_SCOPE_GLOBAL
+          hcd.setScope(enableRep ? HConstants.REPLICATION_SCOPE_GLOBAL
               : HConstants.REPLICATION_SCOPE_LOCAL);
         }
         admin.modifyTable(tableName, htd);
@@ -678,16 +680,33 @@ public class ReplicationAdmin implements Closeable {
   }
 
   /**
+   * This enum indicates the current state of the replication for a given table.
+   */
+  private enum ReplicationState {
+    ENABLED, // all column families enabled
+    MIXED, // some column families enabled, some disabled
+    DISABLED // all column families disabled
+  }
+
+  /**
    * @param htd table descriptor details for the table to check
-   * @return true if table's replication switch is enabled
+   * @return ReplicationState the current state of the table.
    */
-  private boolean isTableRepEnabled(HTableDescriptor htd) {
+  private ReplicationState getTableReplicationState(HTableDescriptor htd) {
+    boolean hasEnabled = false;
+    boolean hasDisabled = false;
+
     for (HColumnDescriptor hcd : htd.getFamilies()) {
       if (hcd.getScope() != HConstants.REPLICATION_SCOPE_GLOBAL) {
-        return false;
+        hasDisabled = true;
+      } else {
+        hasEnabled = true;
       }
     }
-    return true;
+
+    if (hasEnabled && hasDisabled) return ReplicationState.MIXED;
+    if (hasEnabled) return ReplicationState.ENABLED;
+    return ReplicationState.DISABLED;
   }
 
   /**
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/replication/TestReplicationAdminWithClusters.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/replication/TestReplicationAdminWithClusters.java
index 26ed7a7..1c2c36d 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/replication/TestReplicationAdminWithClusters.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/replication/TestReplicationAdminWithClusters.java
@@ -70,6 +70,23 @@ public class TestReplicationAdminWithClusters extends TestReplicationBase {
   }
 
   @Test(timeout = 300000)
+  public void disableNotFullReplication() throws Exception {
+    HTableDescriptor table = admin2.getTableDescriptor(tableName);
+    HColumnDescriptor f = new HColumnDescriptor("notReplicatedFamily");
+    table.addFamily(f);
+    admin1.disableTable(tableName);
+    admin1.modifyTable(tableName, table);
+    admin1.enableTable(tableName);
+
+
+    admin.disableTableRep(tableName);
+    table = admin1.getTableDescriptor(tableName);
+    for (HColumnDescriptor fam : table.getColumnFamilies()) {
+      assertEquals(fam.getScope(), HConstants.REPLICATION_SCOPE_LOCAL);
+    }
+  }
+
+  @Test(timeout = 300000)
   public void testEnableReplicationWhenSlaveClusterDoesntHaveTable() throws Exception {
     admin.disableTableRep(tableName);
     admin2.disableTable(tableName);
-- 
1.7.9.5

