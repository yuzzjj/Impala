From 031c54edb7d3123e6322d2bf0f94b465a7c43807 Mon Sep 17 00:00:00 2001
From: Joseph Hwang <jzh@fb.com>
Date: Thu, 30 Jun 2016 15:18:33 -0700
Subject: [PATCH 184/308] HBASE-16096 Backport. Cleanly remove replication
 peers from ZooKeeper.

Signed-off-by: Elliott Clark <eclark@apache.org>
(cherry picked from commit 909f06147741f232d76bc411ffdd09f2627ca014)

 Conflicts:
	hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java

Change-Id: I637a10fcfce519ab52f245073219c6c37cbd6ffa
Reason: Bug
Author: Joseph Hwang
Ref: CDH-42790
---
 .../regionserver/ReplicationSourceManager.java     |   13 ++++--
 .../regionserver/TestReplicationSourceManager.java |   42 ++++++++++++++++++++
 2 files changed, 52 insertions(+), 3 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java
index a8cffba..f2db7e9 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java
@@ -552,9 +552,10 @@ public class ReplicationSourceManager implements ReplicationListener {
           srcToRemove.add(src);
         }
       }
-      if (srcToRemove.size() == 0) {
-        LOG.error("The queue we wanted to close is missing " + id);
-        return;
+      if (srcToRemove.isEmpty()) {
+        LOG.error("The peer we wanted to remove is missing a ReplicationSourceInterface. " +
+            "This could mean that ReplicationSourceInterface initialization failed for this peer " +
+            "and that replication on this peer may not be caught up. peerId=" + id);
       }
       for (ReplicationSourceInterface toRemove : srcToRemove) {
         toRemove.terminate(terminateMessage);
@@ -719,6 +720,12 @@ public class ReplicationSourceManager implements ReplicationListener {
   }
 
   /**
+   * Get the ReplicationPeers used by this ReplicationSourceManager
+   * @return the ReplicationPeers used by this ReplicationSourceManager
+   */
+  public ReplicationPeers getReplicationPeers() {return this.replicationPeers;}
+
+  /**
    * Get a string representation of all the sources' metrics
    */
   public String getStats() {
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java
index b78896a..896dc54 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java
@@ -19,6 +19,8 @@
 package org.apache.hadoop.hbase.replication.regionserver;
 
 import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
 
 import java.net.URLEncoder;
@@ -55,6 +57,7 @@ import org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl;
 import org.apache.hadoop.hbase.regionserver.wal.WALActionsListener;
 import org.apache.hadoop.hbase.regionserver.wal.WALEdit;
 import org.apache.hadoop.hbase.replication.ReplicationFactory;
+import org.apache.hadoop.hbase.replication.ReplicationPeerConfig;
 import org.apache.hadoop.hbase.replication.ReplicationPeers;
 import org.apache.hadoop.hbase.replication.ReplicationQueueInfo;
 import org.apache.hadoop.hbase.replication.ReplicationQueues;
@@ -415,6 +418,45 @@ public class TestReplicationSourceManager {
     s0.abort("", null);
   }
 
+  /**
+   * Test whether calling removePeer() on a ReplicationSourceManager that failed on initializing the
+   * corresponding ReplicationSourceInterface correctly cleans up the corresponding
+   * replication queue and ReplicationPeer.
+   * See HBASE-16096.
+   * @throws Exception
+   */
+  @Test
+  public void testPeerRemovalCleanup() throws Exception{
+    String replicationSourceImplName = conf.get("replication.replicationsource.implementation");
+    try {
+      DummyServer server = new DummyServer();
+      ReplicationQueues rq =
+          ReplicationFactory.getReplicationQueues(server.getZooKeeper(), server.getConfiguration(),
+              server);
+      rq.init(server.getServerName().toString());
+      // Purposely fail ReplicationSourceManager.addSource() by causing ReplicationSourceInterface
+      // initialization to throw an exception.
+      conf.set("replication.replicationsource.implementation", "fakeReplicationSourceImpl");
+      ReplicationPeers rp = manager.getReplicationPeers();
+      // Set up the znode and ReplicationPeer for the fake peer
+      rp.addPeer("FakePeer", new ReplicationPeerConfig().setClusterKey("localhost:1:/hbase"), null);
+      rp.peerAdded("FakePeer");
+      // Have ReplicationSourceManager add the fake peer. It should fail to initialize a
+      // ReplicationSourceInterface.
+      List<String> fakePeers = new ArrayList<>();
+      fakePeers.add("FakePeer");
+      manager.peerListChanged(fakePeers);
+      // Create a replication queue for the fake peer
+      rq.addLog("FakePeer", "FakeFile");
+      // Removing the peer should remove both the replication queue and the ReplicationPeer
+      manager.removePeer("FakePeer");
+      assertFalse(rq.getAllQueues().contains("FakePeer"));
+      assertNull(rp.getPeer("FakePeer"));
+    } finally {
+      conf.set("replication.replicationsource.implementation", replicationSourceImplName);
+    }
+  }
+
   static class DummyNodeFailoverWorker extends Thread {
     private SortedMap<String, SortedSet<String>> logZnodesMap;
     Server server;
-- 
1.7.9.5

